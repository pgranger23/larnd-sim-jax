# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run, will cancel older workflows if a new one is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, ci ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-sim:
    # Steps represent a sequence of tasks that will be executed as part of the job
    runs-on: ubuntu-latest
    container: pigranger/larndsim-jax:latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.2.2

      - name: Check simulation
        run: |
          ./optimize/simulate_test.sh

        continue-on-error: true

      - uses: actions/upload-artifact@v4
        if: github.event_name != 'pull_request'
        with:
          name: simulation-plots-${{ github.sha }}
          path: output/*.png

      - uses: actions/upload-artifact@v4
        if: github.event_name == 'pull_request'
        with:
          name: simulation-plots-${{ github.event.pull_request.head.sha }}
          path: output/*.png

      - name: Trigger RTDs build
        uses: pgranger23/rtds-action@main
        with:
          webhook_url: ${{ secrets.RTDS_WEBHOOK_URL }}
          webhook_token: ${{ secrets.RTDS_WEBHOOK_TOKEN }}
          commit_ref: ${{ github.ref }}


  test-fit:
    runs-on: ubuntu-latest
    container: pigranger/larndsim-jax:latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.2.2
      - name: Check fit
        run: |
          ./optimize/fit_test.sh

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: fit-result
          path: fit_result/**/*.pkl
          if-no-files-found: error

  test-scan:
    runs-on: ubuntu-latest
    container: pigranger/larndsim-jax:latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.2.2
      - name: Check fit
        run: |
          ./optimize/scan_test.sh

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: scan-result
          path: fit_result/**/*.pkl
          if-no-files-found: error


  test-minuit:
    runs-on: ubuntu-latest
    container: pigranger/larndsim-jax:latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.2.2
      - name: Check fit
        run: |
          ./optimize/minuit_test.sh

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: minuit-result
          path: fit_result/**/*.pkl
          if-no-files-found: error

  tests:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 12
      fail-fast: true
      matrix:
        os: [ ubuntu-24.04 ]
        python-version: [ '3.9', '3.13' ]
        include:
          - os: macos-latest
            python-version: 3.9
          - os: windows-latest
            python-version: 3.9

    steps:
      - uses: actions/checkout@v4.2.2
      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv pip install .[dev] pytest-xdist  # parallelize tests

      - name: Run tests
        run: |
          pytest tests -n auto
